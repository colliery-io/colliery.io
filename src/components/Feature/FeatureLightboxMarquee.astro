---
/**
 * * Three row image marquee
 * JS allows the animation to pause while you hover over it.
 * Images feature a lightbox effect when clicked, expanding to the center of the screen.
 */

import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

// components
import Badge from "@components/Badge/Badge.astro";

interface MarqueeImages {
	images: string[]; // placeholder colors
}

// Using placeholder colors instead of images
const marqueeTop: MarqueeImages = {
	images: ['bg-blue-500', 'bg-green-500', 'bg-yellow-500', 'bg-red-500', 'bg-purple-500', 'bg-pink-500'],
};

const marqueeMiddle: MarqueeImages = {
	images: ['bg-blue-500', 'bg-pink-500', 'bg-red-500', 'bg-green-500', 'bg-yellow-500', 'bg-purple-500'],
};

const marqueeBottom: MarqueeImages = {
	images: ['bg-yellow-500', 'bg-pink-500', 'bg-purple-500', 'bg-red-500', 'bg-purple-500', 'bg-green-500'],
};
---

<section
	id="feature-gallery-marquee"
	class="bg-[url('/assets/pattern-light-big.svg')] bg-center bg-no-repeat py-24 md:py-28 dark:bg-[url('/assets/pattern-dark-big.svg')]"
>
	<div class="site-container flex justify-center">
		<div class="mx-auto mb-16 text-center md:max-w-4xl" data-aos="fade-up">
			<Badge>Gallery</Badge>
			<h2 class="h2">Some of our work</h2>
			<p class="description mt-4 text-lg text-pretty md:text-xl">
				Lorem ipsum dolor sit amet consectetur, adipisicing elit.
			</p>
		</div>
	</div>

	<div class="marquee-wrapper relative flex flex-col gap-6 overflow-hidden md:gap-10">
		<!-- marquee top row -->
		<div class="marquee-top relative flex gap-6 overflow-hidden md:gap-10">
			<div
				class="animate-marquee flex min-w-full shrink-0 items-center justify-around gap-6 md:gap-10"
			>
				{
					marqueeTop.images.map((color, index) => (
						<div
							class={`${color} gallery-image aspect-[4/3] max-w-[clamp(10rem,28vmin,20rem)] cursor-pointer rounded-md shadow-md transition-transform`}
							data-row="top"
							data-index={index}
						/>
					))
				}
			</div>
			<div
				aria-hidden="true"
				class="animate-marquee flex min-w-full shrink-0 items-center justify-around gap-6 md:gap-10"
			>
				{
					marqueeTop.images.map((color, index) => (
						<div
							class={`${color} gallery-image aspect-[4/3] max-w-[clamp(10rem,28vmin,20rem)] cursor-pointer rounded-md shadow-md transition-transform`}
							data-row="top"
							data-index={index}
							aria-hidden="true"
						/>
					))
				}
			</div>
		</div>

		<!-- marquee middle row -->
		<div class="marquee-middle relative flex gap-6 overflow-hidden md:gap-10">
			<div
				class="animate-marquee flex min-w-full shrink-0 items-center justify-around gap-6 [animation-direction:reverse] md:gap-10"
			>
				{
					marqueeMiddle.images.map((color, index) => (
						<div
							class={`${color} gallery-image aspect-[4/3] max-w-[clamp(10rem,28vmin,20rem)] cursor-pointer rounded-md shadow-md transition-transform`}
							data-row="middle"
							data-index={index}
						/>
					))
				}
			</div>
			<div
				aria-hidden="true"
				class="animate-marquee flex min-w-full shrink-0 items-center justify-around gap-6 [animation-direction:reverse] md:gap-10"
			>
				{
					marqueeMiddle.images.map((color, index) => (
						<div
							class={`${color} gallery-image aspect-[4/3] max-w-[clamp(10rem,28vmin,20rem)] cursor-pointer rounded-md shadow-md transition-transform`}
							data-row="middle"
							data-index={index}
							aria-hidden="true"
						/>
					))
				}
			</div>
		</div>

		<!-- marquee bottom row -->
		<div class="marquee-bottom relative flex gap-6 overflow-hidden md:gap-10">
			<div
				class="animate-marquee flex min-w-full shrink-0 items-center justify-around gap-6 md:gap-10"
			>
				{
					marqueeBottom.images.map((color, index) => (
						<div
							class={`${color} gallery-image aspect-[4/3] max-w-[clamp(10rem,28vmin,20rem)] cursor-pointer rounded-md shadow-md transition-transform`}
							data-row="bottom"
							data-index={index}
						/>
					))
				}
			</div>
			<div
				aria-hidden="true"
				class="animate-marquee flex min-w-full shrink-0 items-center justify-around gap-6 md:gap-10"
			>
				{
					marqueeBottom.images.map((color, index) => (
						<div
							class={`${color} gallery-image aspect-[4/3] max-w-[clamp(10rem,28vmin,20rem)] cursor-pointer rounded-md shadow-md transition-transform`}
							data-row="bottom"
							data-index={index}
							aria-hidden="true"
						/>
					))
				}
			</div>
		</div>
	</div>

	<!-- Lightbox overlay -->
	<div id="lightbox-overlay" class="fixed inset-0 z-50 hidden items-center justify-center">
		<!-- Semitransparent background -->
		<div
			id="lightbox-backdrop"
			class="absolute inset-0 bg-black/80 opacity-0 transition-opacity duration-300"
		>
		</div>

		<div id="lightbox-container" class="relative z-10 transition-all duration-500 ease-out">
			<div
				id="lightbox-image"
				class="h-full w-full rounded-lg bg-gray-200 dark:bg-gray-800 shadow-2xl transition-all duration-300"
			/>
			<button
				id="close-lightbox"
				class="hover:bg-muted bg-background text-foreground absolute -top-4 -right-4 flex size-8 items-center justify-center rounded-full shadow-md transition-colors"
				aria-label="Close lightbox"
			>
				<Icon name="tabler/x" class="size-6" />
			</button>
		</div>
	</div>
</section>

<script>
	import anime from "animejs";

	const setupMarquee = () => {
		const marqueeTop = document.querySelector(".marquee-top");
		const marqueeMiddle = document.querySelector(".marquee-middle");
		const marqueeBottom = document.querySelector(".marquee-bottom");
		const marqueeWrapper = document.querySelector(".marquee-wrapper");

		// add the clauss "pause" when the mouse enters the marquee
		marqueeTop?.addEventListener("mouseover", () => {
			if (marqueeWrapper?.classList.contains("lightbox-active")) return;
			marqueeTop.querySelectorAll(".animate-marquee").forEach((el) => {
				el.classList.add("pause");
			});
		});
		marqueeMiddle?.addEventListener("mouseover", () => {
			if (marqueeWrapper?.classList.contains("lightbox-active")) return;
			marqueeMiddle.querySelectorAll(".animate-marquee").forEach((el) => {
				el.classList.add("pause");
			});
		});
		marqueeBottom?.addEventListener("mouseover", () => {
			if (marqueeWrapper?.classList.contains("lightbox-active")) return;
			marqueeBottom.querySelectorAll(".animate-marquee").forEach((el) => {
				el.classList.add("pause");
			});
		});

		// remove the class "pause" when the mouse leaves the marquee
		marqueeTop?.addEventListener("mouseout", () => {
			if (marqueeWrapper?.classList.contains("lightbox-active")) return;
			marqueeTop.querySelectorAll(".animate-marquee").forEach((el) => {
				el.classList.remove("pause");
			});
		});
		marqueeMiddle?.addEventListener("mouseout", () => {
			if (marqueeWrapper?.classList.contains("lightbox-active")) return;
			marqueeMiddle.querySelectorAll(".animate-marquee").forEach((el) => {
				el.classList.remove("pause");
			});
		});
		marqueeBottom?.addEventListener("mouseout", () => {
			if (marqueeWrapper?.classList.contains("lightbox-active")) return;
			marqueeBottom.querySelectorAll(".animate-marquee").forEach((el) => {
				el.classList.remove("pause");
			});
		});
	};

	// runs on initial page load
	setupMarquee();

	// runs on view transitions navigation
	document.addEventListener("astro:after-swap", setupMarquee);
</script>